// Import variables with absolute path
@use '../public/scss/base/_variable' as *;

// Import Sass utilities once at the top
@use 'sass:math';
@use 'sass:map';
@use 'sass:meta';

// Third party imports
@use 'slick-carousel/slick/slick.css';
@use 'slick-carousel/slick/slick-theme.css';
@use 'bootstrap/dist/css/bootstrap.min.css';
@use 'aos/dist/aos.css';

// Main styles
@use '../../public/scss/main';

// Global styles
body {
  a {
    text-decoration: none !important;
  }
}

// Global form styles with higher specificity
.default-form .form-group,
form .form-group,
.form-group {
  input,
  select,
  .form-control,
  input[type="text"],
  input[type="email"],
  input[type="password"],
  input[type="number"],
  input[type="tel"],
  input[type="url"] {
    height: 45px !important;
    min-height: 45px !important;
    padding: 8px 15px;
    line-height: normal;
  }

  // Specific select styling
  select {
    padding: 0 30px 0 15px !important; // Right padding for arrow, left for text
    background-position: right 10px center !important;
    appearance: none !important;
    -webkit-appearance: none !important;
    -moz-appearance: none !important;
    background-color: #f0f5f7 !important;
    border: 1px solid #e6e6e6 !important;
    border-radius: 8px !important;
    
    &:required {
      border: 2px solid orchid !important;
      padding: 0 29px 0 14px !important; // Adjust for thicker border
    }
  }

  textarea,
  textarea.form-control {
    height: auto !important; // Don't restrict height for textareas
  }

  // For regular form inputs
  input::placeholder,
  textarea::placeholder,
  select::placeholder {
    color: #000000 !important;
    opacity: 1 !important;
  }

  // For React Select
  .select__placeholder,
  [class*="-placeholder"],
  .select__single-value,
  [class*="-singleValue"] {
    color: #000000 !important;
  }

  // For disabled/readonly states
  input:disabled::placeholder,
  textarea:disabled::placeholder,
  select:disabled::placeholder,
  input[readonly]::placeholder,
  textarea[readonly]::placeholder,
  select[readonly]::placeholder {
    color: #000000 !important;
  }
}

// For Firefox specific placeholder
.form-group {
  input::-moz-placeholder,
  textarea::-moz-placeholder {
    color: #000000 !important;
    opacity: 1 !important;
  }
}

// Global styles for react-select
.form-group {
  .select__control,
  [class*="-control"] {
    min-height: 45px !important; // minimum height
    height: auto !important; // allow height to grow for multi-select
    
    // Value container
    .select__value-container,
    [class*="-ValueContainer"] {
      min-height: 45px !important;
      height: auto !important; // allow container to grow
      padding: 2px 8px !important;
      display: flex !important;
      align-items: center !important;
      flex-wrap: wrap !important;
    }

    // Multi-value container
    .select__multi-value,
    [class*="-multiValue"] {
      margin: 2px !important;
      height: auto !important;
      display: flex !important;
      align-items: center !important;
      background-color: #e6e6e6 !important; // or your preferred color
    }

    // Multi-value label
    .select__multi-value__label,
    [class*="-multiValue__label"] {
      padding: 2px 6px !important;
      color: #000000 !important;
    }

    // Multi-value remove button
    .select__multi-value__remove,
    [class*="-multiValue__remove"] {
      padding: 0 4px !important;
      display: flex !important;
      align-items: center !important;
    }

    // Single value and placeholder (keep these from previous solution)
    .select__single-value,
    [class*="-singleValue"],
    .select__placeholder,
    [class*="-placeholder"] {
      display: flex !important;
      align-items: center !important;
      height: 100% !important;
      position: absolute !important;
      top: 0 !important;
      transform: none !important;
      color: #000000 !important;
    }

    // Hide the separator
    .select__indicator-separator,
    [class*="-indicatorSeparator"] {
      display: none !important;
    }

    // Container for all indicators
    .select__indicators,
    [class*="-IndicatorsContainer"] {
      height: 45px !important;
      display: flex !important;
      align-items: center !important;
    }

    // Style both dropdown and clear indicators
    .select__dropdown-indicator,
    .select__clear-indicator,
    [class*="-indicatorContainer"] {
      padding: 0 8px !important;
      color: #000000 !important;
      height: 45px !important;
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
    }
  }

  // Input within multi-select
  .select__input-container,
  [class*="-Input"] {
    margin: 0 !important;
    padding: 0 !important;
    height: auto !important;
  }
}

// Icon styles
.icon-wrap {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  
  svg {
    width: 24px;
    height: 24px;
    
    @media (max-width: 768px) {
      width: 20px;
      height: 20px;
    }
  }
}

// Legacy icon class compatibility
[class^="icon-"], 
[class^="flaticon-"],
[class*=" icon-"],
[class*=" flaticon-"] {
  &::before {
    display: none;
  }
  
  svg {
    display: inline-block;
  }
}

// Header specific icon styles
.main-header {
  .icon-user,
  .icon-menu,
  .icon-close {
    svg {
      width: 18px;
      height: 18px;
    }
  }
}

.icon-green {
  color: #4CAF50;  // or your theme color
}

// Social icons specific styles
.social-links {
  svg {
    width: 16px;
    height: 16px;
  }
}
